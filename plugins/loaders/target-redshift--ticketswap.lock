{
  "plugin_type": "loaders",
  "name": "target-redshift",
  "namespace": "target_redshift",
  "variant": "ticketswap",
  "label": "Amazon Redshift",
  "docs": "https://hub.meltano.com/loaders/target-redshift--ticketswap",
  "repo": "https://github.com/TicketSwap/target-redshift",
  "pip_url": "git+https://github.com/TicketSwap/target-redshift.git",
  "executable": "target-redshift",
  "description": "Amazon Redshift loader",
  "logo_url": "https://hub.meltano.com/assets/logos/loaders/redshift.png",
  "capabilities": [
    "about",
    "activate-version",
    "hard-delete",
    "schema-flattening",
    "stream-maps"
  ],
  "settings_group_validation": [
    [
      "aws_redshift_copy_role_arn",
      "s3_bucket"
    ]
  ],
  "settings": [
    {
      "name": "activate_version",
      "kind": "boolean",
      "value": false,
      "label": "Activate Version",
      "description": "If set to false, the tap will ignore activate version messages. If set to true, add_record_metadata must be set to true as well."
    },
    {
      "name": "add_record_metadata",
      "kind": "boolean",
      "value": false,
      "label": "Add Record Metadata",
      "description": "Note that this must be enabled for activate_version to work!This adds _sdc_extracted_at, _sdc_batched_at, and more to every table. See https://sdk.meltano.com/en/latest/implementation/record_metadata.html for more information."
    },
    {
      "name": "aws_redshift_copy_role_arn",
      "kind": "string",
      "label": "AWS Redshift Copy Role ARN",
      "description": "Redshift copy role arn to use for the COPY command from s3"
    },
    {
      "name": "batch_size_rows",
      "kind": "integer",
      "label": "Batch Size Rows",
      "description": "Maximum number of rows in each batch."
    },
    {
      "name": "cluster_identifier",
      "kind": "string",
      "label": "Cluster IDentifier",
      "description": "Redshift cluster identifier. Note if sqlalchemy_url is set or enable_iam_authentication is false this will be ignored.",
      "sensitive": true
    },
    {
      "name": "dbname",
      "kind": "string",
      "label": "Database Name",
      "description": "Database name. Note if sqlalchemy_url is set this will be ignored."
    },
    {
      "name": "default_target_schema",
      "kind": "string",
      "value": "$MELTANO_EXTRACT__LOAD_SCHEMA",
      "label": "Default Target Schema",
      "description": "Redshift schema to send data to, example: tap-clickup"
    },
    {
      "name": "enable_iam_authentication",
      "kind": "boolean",
      "label": "Enable IAM Authentication",
      "description": "If true, use temporary credentials (https://docs.aws.amazon.com/redshift/latest/mgmt/generating-iam-credentials-cli-api.html)."
    },
    {
      "name": "faker_config.locale",
      "kind": "array",
      "label": "Faker Locale",
      "description": "One or more LCID locale strings to produce localized output for: https://faker.readthedocs.io/en/master/#localization"
    },
    {
      "name": "faker_config.seed",
      "kind": "string",
      "label": "Faker Seed",
      "description": "Value to seed the Faker generator for deterministic output: https://faker.readthedocs.io/en/master/#seeding-the-generator"
    },
    {
      "name": "flattening_enabled",
      "kind": "boolean",
      "label": "Enable Schema Flattening",
      "description": "'True' to enable schema flattening and automatically expand nested properties."
    },
    {
      "name": "flattening_max_depth",
      "kind": "integer",
      "label": "Max Flattening Depth",
      "description": "The max depth to flatten schemas."
    },
    {
      "name": "hard_delete",
      "kind": "boolean",
      "value": false,
      "label": "Hard Delete",
      "description": "When activate version is sent from a tap this specefies if we should delete the records that don't match, or mark them with a date in the `_sdc_deleted_at` column. This config option is ignored if `activate_version` is set to false."
    },
    {
      "name": "host",
      "kind": "string",
      "label": "Host",
      "description": "Hostname for redshift instance."
    },
    {
      "name": "load_method",
      "kind": "options",
      "value": "append-only",
      "label": "Load Method",
      "description": "The method to use when loading data into the destination. `append-only` will always write all input records whether that records already exists or not. `upsert` will update existing records and insert new records. `overwrite` will delete all existing records and insert all input records.",
      "options": [
        {
          "label": "Append Only",
          "value": "append-only"
        },
        {
          "label": "Upsert",
          "value": "upsert"
        },
        {
          "label": "Overwrite",
          "value": "overwrite"
        }
      ]
    },
    {
      "name": "password",
      "kind": "string",
      "label": "Password",
      "description": "Password used to authenticate. Note if sqlalchemy_url is set this will be ignored.",
      "sensitive": true
    },
    {
      "name": "port",
      "kind": "string",
      "value": "5432",
      "label": "Port",
      "description": "The port on which redshift is awaiting connection."
    },
    {
      "name": "process_activate_version_messages",
      "kind": "boolean",
      "value": true,
      "label": "Process `ACTIVATE_VERSION` messages",
      "description": "Whether to process `ACTIVATE_VERSION` messages."
    },
    {
      "name": "remove_s3_files",
      "kind": "boolean",
      "value": false,
      "label": "Remove S3 Files",
      "description": "If you want to remove staging files in S3"
    },
    {
      "name": "s3_bucket",
      "kind": "string",
      "label": "S3 Bucket",
      "description": "S3 bucket to save staging files before using COPY command"
    },
    {
      "name": "s3_key_prefix",
      "kind": "string",
      "value": "",
      "label": "S3 Key Prefix",
      "description": "S3 key prefix to save staging files before using COPY command",
      "sensitive": true
    },
    {
      "name": "s3_region",
      "kind": "string",
      "label": "S3 Region",
      "description": "AWS region for S3 bucket. If not specified, region will be detected by boto config resolution. See https://boto3.amazonaws.com/v1/documentation/api/latest/guide/configuration.html"
    },
    {
      "name": "ssl_enable",
      "kind": "boolean",
      "value": false,
      "label": "SSL Enable",
      "description": "Whether or not to use ssl to verify the server's identity. Use ssl_certificate_authority and ssl_mode for further customization. To use a client certificate to authenticate yourself to the server, use ssl_client_certificate_enable instead."
    },
    {
      "name": "ssl_mode",
      "kind": "string",
      "value": "verify-full",
      "label": "SSL Mode",
      "description": "SSL Protection method, see [redshift documentation](https://docs.aws.amazon.com/redshift/latest/mgmt/connecting-ssl-support.html for more information. Must be one of disable, allow, prefer, require, verify-ca, or verify-full."
    },
    {
      "name": "stream_map_config",
      "kind": "object",
      "label": "User Stream Map Configuration",
      "description": "User-defined config values to be used within map expressions."
    },
    {
      "name": "stream_maps",
      "kind": "object",
      "label": "Stream Maps",
      "description": "Config object for stream maps capability. For more information check out [Stream Maps](https://sdk.meltano.com/en/latest/stream_maps.html)."
    },
    {
      "name": "temp_dir",
      "kind": "string",
      "value": "temp",
      "label": "Temp Dir",
      "description": "Where you want to store your temp data files."
    },
    {
      "name": "user",
      "kind": "string",
      "label": "User",
      "description": "User name used to authenticate. Note if sqlalchemy_url is set this will be ignored."
    },
    {
      "name": "validate_records",
      "kind": "boolean",
      "value": true,
      "label": "Validate Records",
      "description": "Whether to validate the schema of the incoming streams."
    }
  ],
  "target_schema": "$TARGET_REDSHIFT_SCHEMA"
}
